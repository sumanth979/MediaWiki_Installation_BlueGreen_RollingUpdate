AWSTemplateFormatVersion: '2010-09-09'
Resources:
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        GroupName: AppELBSecurityGroup
        VpcId: 
          Ref: MyVPCId
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        GroupName: AppInstanceSecurityGroup
        VpcId: 
          Ref: MyVPCId
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
    DependsOn:
    - ELBSecurityGroup
  AppELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name:
        Ref: InternalELBName
      Scheme: internet-facing
      SecurityGroups: [
        Ref: ELBSecurityGroup ]
      Subnets:
        Ref: Subnets
      Type: application
  
  cretaing DB:
    Type: 
    InstanceType:
    Memory:
    Security:
      
  AppELBTargetGroupBlue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: 
        Fn::If: [AppListenerColorBlue, "/" ,"/"]
      HealthCheckPort: '80'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name:
        Ref: TargetGroupBlueName
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: MyVPCId
    DependsOn:
    - AppELB
  AppELBTargetGroupGreen:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: 
        Fn::If: [AppListenerColorBlue, "/" ,"/"]
      HealthCheckPort: '80'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name:
        Ref: TargetGroupGreenName
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      UnhealthyThresholdCount: 2
      VpcId:
        Ref: MyVPCId
    DependsOn:
    - AppELB
  AppELBDefaultListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn:
        Ref: AppELB
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Fn::If:
          - AppListenerColorBlue
          - Ref: AppELBTargetGroupBlue
          - Ref: AppELBTargetGroupGreen
      Port: 80
      Protocol: HTTP
    DependsOn:
    - AppELB
    - AppELBTargetGroupBlue
    - AppELBTargetGroupGreen
  ELBListenerRuleBlue:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn:
          Ref: AppELBTargetGroupBlue
      Conditions:
      - Field: path-pattern
        Values:
        - "/app-blue"
      ListenerArn:
        Ref: AppELBDefaultListener
      Priority: 1
    DependsOn:
    - AppELBDefaultListener
    - AppELBTargetGroupBlue
  ELBListenerRuleGreen:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn:
          Ref: AppELBTargetGroupGreen
      Conditions:
      - Field: path-pattern
        Values:
        - "/app-green"
      ListenerArn:
        Ref: AppELBDefaultListener
      Priority: 2
    DependsOn:
    - AppELBDefaultListener
    - AppELBTargetGroupGreen
  AppAutoScalingGreen:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity:
        Ref: ASGGreenSize
      HealthCheckType: ELB
      HealthCheckGracePeriod: '900'
      LaunchConfigurationName:
        Ref: AppLaunchConfigurationGreen
      MaxSize:
        Ref: ASGSizeMaxSize
      MinSize:
        Ref: ASGSizeMinSize
      TerminationPolicies:
      - Default
      VPCZoneIdentifier:
        Ref: Subnets
      Tags:
      - PropagateAtLaunch: true
        Value: AppServer
        Key: Purpose
      TargetGroupARNs: [
        Ref: AppELBTargetGroupGreen ]
    DependsOn:
    - AppLaunchConfigurationGreen
    - ELBListenerRuleGreen
  AppLaunchConfigurationGreen:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      BlockDeviceMappings:
      - DeviceName: "/dev/xvda"
        Ebs:
          DeleteOnTermination: true
          VolumeSize: 8
          VolumeType: gp2
      EbsOptimized: false
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      InstanceMonitoring: true
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      SecurityGroups: [
        Ref: InstanceSecurityGroup ]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install httpd -y
          systemctl start httpd.service
          systemctl enable httpd.service
          echo "<h1>Hello World welcome to blue green deployment.</h1>" > /var/www/html/index.html
    DependsOn:
    - InstanceSecurityGroup
  AppAutoScalingBlue:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity:
        Ref: ASGBlueSize
      HealthCheckType: ELB
      HealthCheckGracePeriod: '900'
      LaunchConfigurationName:
        Ref: AppLaunchConfigurationBlue
      MaxSize:
        Ref: ASGSizeMaxSize
      MinSize:
        Ref: ASGSizeMinSize
      TerminationPolicies:
      - Default
      VPCZoneIdentifier:
        Ref: Subnets
      Tags:
      - PropagateAtLaunch: true
        Value: AppServer
        Key: Purpose
      TargetGroupARNs: [
        Ref: AppELBTargetGroupBlue ]
    DependsOn:
    - AppLaunchConfigurationBlue
    - ELBListenerRuleBlue
  AppLaunchConfigurationBlue:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      BlockDeviceMappings:
      - DeviceName: "/dev/xvda"
        Ebs:
          DeleteOnTermination: true
          VolumeSize: 8
          VolumeType: gp2
      EbsOptimized: false
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      InstanceMonitoring: true
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      SecurityGroups: [
        Ref: InstanceSecurityGroup ]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install httpd -y
          systemctl start httpd.service
          systemctl enable httpd.service
          echo "<h1>Hello World welcome to blue green deployment.</h1>" > /var/www/html/index.html
    DependsOn:
    - InstanceSecurityGroup
  
Parameters:
  ASGGreenSize:
    Description: Desired number of EC2 instances in green Auto Scaling Group
    Type: Number
    Default: 0
  ASGBlueSize:
    Description: Desired number of EC2 instances in green Auto Scaling Group
    Type: Number
    Default: 2
  ASGSizeMinSize:
    Description: Min number of EC2 instances in Auto Scaling Group
    Type: Number
    Default: 0
  ASGSizeMaxSize:
    Description: Max number of EC2 instances in Auto Scaling Group
    Type: Number
    Default: 4
  MyVPCId:
    Description: VPC Id
    Type: AWS::EC2::VPC::Id
  Subnets:
    Description: List of subnets
    Type: List<AWS::EC2::Subnet::Id>
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t1.micro
    - t2.micro
  KeyName:
    Description: EC2 key pair
    Type: String
    Default: my_ec2_key
  InternalELBName:
    Description: Internal ELB Name Assigned
    Type: String
    Default: myapp-internal-elb
  AppListenerColor:
    Description: default Listener color
    Type: String
    Default: blue
    AllowedValues:
    - blue
    - green
  TargetGroupBlueName:
    Description: Blue Target Group Name Assigned
    Type: String
    Default: web-app-blue
  TargetGroupGreenName:
    Description: Green Target Group Name Assigned
    Type: String
    Default: web-app-green

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-098f16afa9edf40be

Outputs:
  ELBFQDN:
    Description: Elastic Load Balancer url
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - AppELB
          - DNSName

Conditions:
  AppListenerColorBlue:
    Fn::Equals:
    - Ref: AppListenerColor
    - blue
